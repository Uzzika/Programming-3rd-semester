#include "implementation.hpp"
#include <riscv_vector.h>

// RGB2GRAY conversion
void impl_rgb2gray(cv::Mat &src, cv::Mat &dst, int height, int width)
{
int len = height * width;
size_t vl = vsetvl_e4m1(len);
const float cR = 0.299f, cG = 0.587f, cB = 0.114f;

uint8_t* pSrc = reinterpret_cast<uint8_t*>(src.data);
uint8_t* pDst = reinterpret_cast<uint8_t*>(dst.data);

vfloat32m1_t  vRd, vGrn, vBl; 

for (uint64_t i = 0; i < len; i += vl * 3) {
    auto vRd = vsle_v_f32m3(pSrc + i , 3, vl);   //запись со сдвигом
    auto vGrn = vsle_v_f32m3 (pSrc + i + 1, 3, vl);
    auto vBl = vsle_v_f32m3 (pSrc + i + 2, 3, vl);

    auto vRd = vfmul_vf_f32m1 (vRd, cR, vl);    //умножаем
    auto vGrn = vfmul_vf_f32m1 (vGrn, cG, vl);
    auto vBl = vfmul_vf_f32m1 (vBl, cB, vl);

    vsum = vfadd_vv_u16m2 (vRd, vGrn, vl);  //суммируем
    vres = vfadd_vv_u16m2 (vsum, vBl, vl);

    vse32_v_f32m1(pDst, vres, vl);
}
}
